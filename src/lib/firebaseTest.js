import { db } from './firebase';
import { collection, getDocs, addDoc, doc, getDoc, deleteDoc } from 'firebase/firestore';

// ุฏุงูุฉ ุงุฎุชุจุงุฑ ุงุชุตุงู Firebase
export async function testFirebaseConnection() {
  try {
    console.log('๐ ุงุฎุชุจุงุฑ ุงุชุตุงู Firebase...');
    
    // ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุงูุฃุณุงุณู
    if (!db) {
      throw new Error('Firebase DB ุบูุฑ ูุชุตู');
    }
    
    console.log('โ Firebase DB ูุชุตู ุจูุฌุงุญ');
    
    // ุงุฎุชุจุงุฑ ูุฑุงุกุฉ ูุฌููุนุฉ ุงููุชุจ
    console.log('๐ ุงุฎุชุจุงุฑ ูุฑุงุกุฉ ูุฌููุนุฉ ุงููุชุจ...');
    const booksSnapshot = await getDocs(collection(db, 'books'));
    console.log(`โ ุชู ูุฑุงุกุฉ ${booksSnapshot.size} ูุชุงุจ ุจูุฌุงุญ`);
    
    // ุงุฎุชุจุงุฑ ุฅุถุงูุฉ ูุชุงุจ ุชุฌุฑูุจู
    console.log('โ ุงุฎุชุจุงุฑ ุฅุถุงูุฉ ูุชุงุจ ุชุฌุฑูุจู...');
    const testBook = {
      title: 'ูุชุงุจ ุงุฎุชุจุงุฑ',
      author: 'ูุคูู ุงุฎุชุจุงุฑ',
      category: 'ุงุฎุชุจุงุฑ',
      price: 0,
      type: 'test',
      createdAt: new Date(),
      isTest: true
    };
    
    const docRef = await addDoc(collection(db, 'books'), testBook);
    console.log(`โ ุชู ุฅุถุงูุฉ ูุชุงุจ ุชุฌุฑูุจู ุจูุฌุงุญุ ุงููุนุฑู: ${docRef.id}`);
    
    // ุงุฎุชุจุงุฑ ูุฑุงุกุฉ ุงููุชุงุจ ุงููุถุงู
    console.log('๐ ุงุฎุชุจุงุฑ ูุฑุงุกุฉ ุงููุชุงุจ ุงููุถุงู...');
    const bookDoc = await getDoc(doc(db, 'books', docRef.id));
    if (bookDoc.exists()) {
      console.log('โ ุชู ูุฑุงุกุฉ ุงููุชุงุจ ุงููุถุงู ุจูุฌุงุญ');
      console.log('๐ ุจูุงูุงุช ุงููุชุงุจ:', bookDoc.data());
    } else {
      throw new Error('ูุดู ูู ูุฑุงุกุฉ ุงููุชุงุจ ุงููุถุงู');
    }
    
    // ุญุฐู ุงููุชุงุจ ุงูุชุฌุฑูุจู
    console.log('๐๏ธ ุญุฐู ุงููุชุงุจ ุงูุชุฌุฑูุจู...');
    await deleteDoc(doc(db, 'books', docRef.id));
    console.log('โ ุชู ุญุฐู ุงููุชุงุจ ุงูุชุฌุฑูุจู ุจูุฌุงุญ');
    
    console.log('๐ ุฌููุน ุงุฎุชุจุงุฑุงุช Firebase ูุฌุญุช!');
    return { success: true, message: 'Firebase ูุนูู ุจุดูู ุตุญูุญ' };
    
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงุฎุชุจุงุฑ Firebase:', error);
    
    let errorMessage = 'ุฎุทุฃ ุบูุฑ ูุนุฑูู';
    
    if (error.code === 'permission-denied') {
      errorMessage = 'ุฎุทุฃ ูู ุงูุตูุงุญูุงุช. ุชุฃูุฏ ูู ููุงุนุฏ ุงูุฃูุงู ูู Firestore.';
    } else if (error.code === 'unavailable') {
      errorMessage = 'Firebase ุบูุฑ ูุชุงุญ. ุชุญูู ูู ุงุชุตุงูู ุจุงูุฅูุชุฑูุช.';
    } else if (error.code === 'unauthenticated') {
      errorMessage = 'ูู ูุชู ุชุณุฌูู ุงูุฏุฎูู. ูุฑุฌู ุฅุนุงุฏุฉ ุชุณุฌูู ุงูุฏุฎูู.';
    } else if (error.code === 'not-found') {
      errorMessage = 'ุงููุฌููุนุฉ ุบูุฑ ููุฌูุฏุฉ. ุชุญูู ูู ุฅุนุฏุงุฏุงุช Firestore.';
    } else {
      errorMessage = error.message || 'ุฎุทุฃ ุบูุฑ ูุนุฑูู';
    }
    
    return { 
      success: false, 
      error: errorMessage,
      code: error.code,
      details: error
    };
  }
}

// ุฏุงูุฉ ุงุฎุชุจุงุฑ ุฅุถุงูุฉ ูุชุงุจ
export async function testAddBook(bookData) {
  try {
    console.log('โ ุงุฎุชุจุงุฑ ุฅุถุงูุฉ ูุชุงุจ:', bookData);
    
    if (!db) {
      throw new Error('Firebase DB ุบูุฑ ูุชุตู');
    }
    
    // ุงูุชุญูู ูู ุตุญุฉ ุงูุจูุงูุงุช
    if (!bookData.title || !bookData.author) {
      throw new Error('ุงูุจูุงูุงุช ุบูุฑ ููุชููุฉ. ุงูุนููุงู ูุงููุคูู ูุทููุจุงู.');
    }
    
    // ุฅุถุงูุฉ ุงููุชุงุจ
    const docRef = await addDoc(collection(db, 'books'), {
      ...bookData,
      createdAt: new Date(),
      updatedAt: new Date()
    });
    
    console.log(`โ ุชู ุฅุถุงูุฉ ุงููุชุงุจ ุจูุฌุงุญุ ุงููุนุฑู: ${docRef.id}`);
    
    // ูุฑุงุกุฉ ุงููุชุงุจ ุงููุถุงู
    const bookDoc = await getDoc(doc(db, 'books', docRef.id));
    const addedBook = { id: bookDoc.id, ...bookDoc.data() };
    
    return { 
      success: true, 
      book: addedBook,
      message: 'ุชู ุฅุถุงูุฉ ุงููุชุงุจ ุจูุฌุงุญ'
    };
    
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฅุถุงูุฉ ุงููุชุงุจ:', error);
    
    let errorMessage = 'ุฎุทุฃ ุบูุฑ ูุนุฑูู';
    
    if (error.code === 'permission-denied') {
      errorMessage = 'ูุง ุชููู ุตูุงุญูุฉ ุฅุถุงูุฉ ูุชุจ. ุชุฃูุฏ ูู ุชุณุฌูู ุงูุฏุฎูู ููุฏูุฑ.';
    } else if (error.code === 'unavailable') {
      errorMessage = 'Firebase ุบูุฑ ูุชุงุญ. ุชุญูู ูู ุงุชุตุงูู ุจุงูุฅูุชุฑูุช.';
    } else if (error.code === 'unauthenticated') {
      errorMessage = 'ูู ูุชู ุชุณุฌูู ุงูุฏุฎูู. ูุฑุฌู ุฅุนุงุฏุฉ ุชุณุฌูู ุงูุฏุฎูู.';
    } else if (error.code === 'invalid-argument') {
      errorMessage = 'ุงูุจูุงูุงุช ุงููุฑุณูุฉ ุบูุฑ ุตุงูุญุฉ. ุชุญูู ูู ุตุญุฉ ุงูุจูุงูุงุช.';
    } else {
      errorMessage = error.message || 'ุฎุทุฃ ุบูุฑ ูุนุฑูู';
    }
    
    return { 
      success: false, 
      error: errorMessage,
      code: error.code,
      details: error
    };
  }
}

